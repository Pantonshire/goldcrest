syntax = "proto3";

option go_package = "github.com/pantonshire/goldcrest/rpc";

package twitter1;

import "google/protobuf/timestamp.proto";

service Twitter1 {
  rpc GetTweet(TweetRequest) returns (Tweet);
  rpc GetTweets(TweetsRequest) returns (stream Tweet);
  rpc GetRaw(RawAPIRequest) returns (RawAPIResult);
}

message Authentication {
  string consumer_key = 1;
  string access_token = 2;
  string secret_key = 3;
  string secret_token = 4;
}

message Indices {
  uint32 start = 1;
  uint32 end = 2;
}

message TweetOptions {
  bool trim_user = 1;
  bool include_my_retweet = 2;
  bool include_entities = 3;
  bool include_card_uri = 4;
  enum TweetMode {
    COMPAT = 0;
    EXTENDED = 1;
  }
  TweetMode mode = 5;
}

message TweetRequest {
  Authentication auth = 1;
  fixed64 id = 2;
  TweetOptions options = 3;
}

message TweetsRequest {
  Authentication auth = 1;
  repeated fixed64 id = 2;
  TweetOptions options = 3;
}

message Tweet {
  fixed64 id = 1;
  google.protobuf.Timestamp created_at = 2;
  string text = 3;
  Indices text_display_range = 4;
  bool truncated = 5;
  string source = 6;
  User user = 7;
}

message User {
  fixed64 id = 1;
  string handle = 2;
  string display_name = 3;
  google.protobuf.Timestamp created_at = 4;
  string bio = 5;
  string url = 6;
  string location = 7;
  bool protected = 8;
  bool verified = 9;
  uint32 follower_count = 10;
  uint32 following_count = 11;
  uint32 listed_count = 12;
  uint32 favorites_count = 13;
  uint32 statuses_count = 14;
  string profile_banner = 15;
  string profile_image = 16;
  bool default_profile = 17;
  bool default_profile_image = 18;
  repeated string withheld_countries = 19;
  string withheld_scope = 20;

  //TODO: entities
}

message URL {
  Indices indices = 1;
  string twitter_url = 2;
  string display_url = 3;
  string expanded_url = 4;
}

message Symbol {
  Indices indices = 1;
  string text = 2;
}

message Mention {
  Indices indices = 1;
  fixed64 user_id = 2;
  string handle = 3;
  string display_name = 4;
}

message Media {
  URL url = 1;
  fixed64 id = 2;
  string type = 3;
  string media_url = 4;
  string alt = 5;
}

message RawAPIRequest {
  Authentication auth = 1;
  string version = 2;
  string path = 3;
  map<string, string> query_params = 4;
  map<string, string> body_params = 5;
}

message RawAPIResult {
  map<string, string> headers = 1;
  uint32 status = 2;
  string body = 3;
}
