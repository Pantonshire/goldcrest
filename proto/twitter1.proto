syntax = "proto3";

option go_package = "github.com/pantonshire/goldcrest/rpc";

package twitter1;

import "google/protobuf/timestamp.proto";

service Twitter1 {
  rpc GetTweet(TweetRequest) returns (Tweet);
  rpc GetTweets(TweetsRequest) returns (stream Tweet);
  rpc GetRaw(RawAPIRequest) returns (RawAPIResult);
}

message Authentication {
  string consumerKey = 1;
  string accessToken = 2;
  string secretKey = 3;
  string secretToken = 4;
}

message Indices {
  uint32 start = 1;
  uint32 end = 2;
}

message TweetOptions {
  bool trimUser = 1;
  bool includeMyRetweet = 2;
  bool includeEntities = 3;
  bool includeCardURI = 4;
  enum TweetMode {
    COMPAT = 0;
    EXTENDED = 1;
  }
  TweetMode mode = 5;
}

message TweetRequest {
  Authentication auth = 1;
  fixed64 id = 2;
  TweetOptions options = 3;
}

message TweetsRequest {
  Authentication auth = 1;
  repeated fixed64 id = 2;
  TweetOptions options = 3;
}

message Tweet {
  fixed64 id = 1;
  google.protobuf.Timestamp createdAt = 2;
  string text = 3;
  Indices textDisplayRange = 4;
  bool truncated = 5;
  string source = 6;
  User user = 7;
}

message User {
  fixed64 id = 1;
  string handle = 2;
  string displayName = 3;
  google.protobuf.Timestamp createdAt = 4;
  string bio = 5;
  string url = 6;
  string location = 7;
  bool protected = 8;
  bool verified = 9;
  uint32 followerCount = 10;
  uint32 followingCount = 11;
  uint32 listedCount = 12;
  uint32 favoritesCount = 13;
  uint32 statusesCount = 14;
  string profileBanner = 15;
  string profileImage = 16;
  bool defaultProfile = 17;
  bool defaultProfileImage = 18;
  repeated string withheldCountries = 19;
  string withheldScope = 20;

  //TODO: entities
}

message URL {
  Indices indices = 1;
  string twitterURL = 2;
  string displayURL = 3;
  string expandedURL = 4;
}

message Symbol {
  Indices indices = 1;
  string text = 2;
}

message Mention {
  Indices indices = 1;
  fixed64 userID = 2;
  string handle = 3;
  string displayName = 4;
}

message Media {
  URL url = 1;
  fixed64 id = 2;
  string type = 3;
  string mediaURL = 4;
  string alt = 5;
}

message RawAPIRequest {
  Authentication auth = 1;
  string version = 2;
  string path = 3;
  map<string, string> queryParams = 4;
  map<string, string> bodyParams = 5;
}

message RawAPIResult {
  map<string, string> headers = 1;
  uint32 status = 2;
  string body = 3;
}
